---
import { getTranslations, getCurrentLocale, getLocalizedUrl, type Locale } from '../utils/i18n';

const currentUrl = new URL(Astro.request.url);
const currentLocale = getCurrentLocale(currentUrl);
const t = getTranslations(currentLocale);

// Get the current path without locale prefix
const currentPath = currentUrl.pathname.startsWith('/ru') 
  ? currentUrl.pathname.replace('/ru', '') || '/'
  : currentUrl.pathname;
---

<header class="bg-white shadow-sm border-b border-gray-100 sticky top-0 z-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <a href={getLocalizedUrl('/', currentLocale)} class="flex items-center space-x-2">
          <span class="text-2xl">ðŸš€</span>
          <span class="text-xl font-bold text-gray-900">ProShare.dev</span>
        </a>
      </div>

      <!-- Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        <a href={getLocalizedUrl('/', currentLocale)} class="text-gray-600 hover:text-primary-600 transition-colors font-medium">
          {t.nav.home}
        </a>
        <a href={getLocalizedUrl('/projects', currentLocale)} class="text-gray-600 hover:text-primary-600 transition-colors font-medium">
          {t.nav.projects}
        </a>
        <a href={getLocalizedUrl('/submit', currentLocale)} class="text-gray-600 hover:text-primary-600 transition-colors font-medium">
          {t.nav.submit}
        </a>
        <a href={getLocalizedUrl('/about', currentLocale)} class="text-gray-600 hover:text-primary-600 transition-colors font-medium">
          {t.nav.about}
        </a>
      </nav>

      <!-- Language Switcher -->
      <div class="flex items-center space-x-4">
        <div class="flex items-center space-x-2 bg-gray-100 rounded-lg p-1">
          <a 
            href={getLocalizedUrl(currentPath, 'en')} 
            class={`flex items-center space-x-1 px-3 py-1 rounded text-sm font-medium transition-colors ${
              currentLocale === 'en' 
                ? 'bg-white text-primary-600 shadow-sm' 
                : 'text-gray-600 hover:text-primary-600'
            }`}
          >
            <span>ðŸ‡¬ðŸ‡§</span>
            <span>EN</span>
          </a>
          <a 
            href={getLocalizedUrl(currentPath, 'ru')} 
            class={`flex items-center space-x-1 px-3 py-1 rounded text-sm font-medium transition-colors ${
              currentLocale === 'ru' 
                ? 'bg-white text-primary-600 shadow-sm' 
                : 'text-gray-600 hover:text-primary-600'
            }`}
          >
            <span>ðŸ‡·ðŸ‡º</span>
            <span>RU</span>
          </a>
        </div>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button type="button" class="text-gray-500 hover:text-gray-600" id="mobile-menu-button">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div class="md:hidden hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-gray-50 rounded-lg mt-2">
        <a href={getLocalizedUrl('/', currentLocale)} class="block px-3 py-2 text-gray-600 hover:text-primary-600 transition-colors font-medium">
          {t.nav.home}
        </a>
        <a href={getLocalizedUrl('/projects', currentLocale)} class="block px-3 py-2 text-gray-600 hover:text-primary-600 transition-colors font-medium">
          {t.nav.projects}
        </a>
        <a href={getLocalizedUrl('/submit', currentLocale)} class="block px-3 py-2 text-gray-600 hover:text-primary-600 transition-colors font-medium">
          {t.nav.submit}
        </a>
        <a href={getLocalizedUrl('/about', currentLocale)} class="block px-3 py-2 text-gray-600 hover:text-primary-600 transition-colors font-medium">
          {t.nav.about}
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('mobile-menu-button');
    const menu = document.getElementById('mobile-menu');
    
    button?.addEventListener('click', () => {
      menu?.classList.toggle('hidden');
    });
  });
</script>